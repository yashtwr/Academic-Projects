plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN for combined labels ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(history_mlp.epoch,history_mlp.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(history_mlp.epoch,history_mlp.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(history_mlp.epoch,history_mlp.history['loss'],'b--',label = 'Training losses')
plt.plot(history_mlp.epoch,history_mlp.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.legend()
plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN for Label: Recovered ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_recovered.epoch,his_recovered.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_recovered.epoch,his_recovered.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.ylim([0.5,0.9])
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_recovered.epoch,his_recovered.history['loss'],'b--',label = 'Training losses')
plt.plot(his_recovered.epoch,his_recovered.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN for Label: Deaths ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_deaths.epoch,his_deaths.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_deaths.epoch,his_deaths.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_deaths.epoch,his_deaths.history['loss'],'b--',label = 'Training losses')
plt.plot(his_deaths.epoch,his_deaths.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of DNN for Label: Confirmed ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_confirmed.epoch,his_confirmed.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_confirmed.epoch,his_confirmed.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_confirmed.epoch,his_confirmed.history['loss'],'b--',label = 'Training losses')
plt.plot(his_confirmed.epoch,his_confirmed.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN using PCA features for combined Labels",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_pmlp.epoch,his_pmlp.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_pmlp.epoch,his_pmlp.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_pmlp.epoch,his_pmlp.history['loss'],'b--',label = 'Training losses')
plt.plot(his_pmlp.epoch,his_pmlp.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN using PCA features for Label: Recovered",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_precovered.epoch,his_precovered.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_precovered.epoch,his_precovered.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.ylim([0.5,0.9])
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_precovered.epoch,his_precovered.history['loss'],'b--',label = 'Training losses')
plt.plot(his_precovered.epoch,his_precovered.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN using PCA features for Label: Deaths",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_pdeaths.epoch,his_pdeaths.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_pdeaths.epoch,his_pdeaths.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_pdeaths.epoch,his_pdeaths.history['loss'],'b--',label = 'Training losses')
plt.plot(his_pdeaths.epoch,his_pdeaths.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Default Architecture of DNN using PCA features for Label: Confirmed",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_pconfirmed.epoch,his_pconfirmed.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_pconfirmed.epoch,his_pconfirmed.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_pconfirmed.epoch,his_pconfirmed.history['loss'],'b--',label = 'Training losses')
plt.plot(his_pconfirmed.epoch,his_pconfirmed.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()
plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of DNN for Label: Recovered ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_m_rec.epoch,his_m_rec.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_m_rec.epoch,his_m_rec.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_m_rec.epoch,his_m_rec.history['loss'],'b--',label = 'Training losses')
plt.plot(his_m_rec.epoch,his_m_rec.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()

plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of DNN for Label: Deaths ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_m_deaths.epoch,his_m_deaths.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_m_deaths.epoch,his_m_deaths.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_m_deaths.epoch,his_m_deaths.history['loss'],'b--',label = 'Training losses')
plt.plot(his_m_deaths.epoch,his_m_deaths.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()

plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of DNN for Label: Confirmed ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_m_confirmed.epoch,his_m_confirmed.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_m_confirmed.epoch,his_m_confirmed.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_m_confirmed.epoch,his_m_confirmed.history['loss'],'b--',label = 'Training losses')
plt.plot(his_m_confirmed.epoch,his_m_confirmed.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()

plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of LSTM for Label: Recovered ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_lstm_r.epoch,his_lstm_r.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_lstm_r.epoch,his_lstm_r.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_lstm_r.epoch,his_lstm_r.history['loss'],'b--',label = 'Training losses')
plt.plot(his_lstm_r.epoch,his_lstm_r.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()

plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of LSTM for Label: Deaths ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_lstm_d.epoch,his_lstm_d.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_lstm_d.epoch,his_lstm_d.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_lstm_d.epoch,his_lstm_d.history['loss'],'b--',label = 'Training losses')
plt.plot(his_lstm_d.epoch,his_lstm_d.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()

plt.xlabel('Epochs')
plt.ylabel('Losses')
plt.figure(figsize=(15,5)).suptitle("Modified Architecture of LSTM for Label: Confirmed ",fontsize=17)
plt.subplot(1,2,1)
plt.plot(his_lstm_c.epoch,his_lstm_c.history['accuracy'],'b--',label = 'Training Accuracy')
plt.plot(his_lstm_c.epoch,his_lstm_c.history['val_accuracy'],'r',label = 'Validation Accuracy')
plt.title(' Training and Validation Accuracy VS Epoch')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.subplot(1,2,2)
plt.plot(his_lstm_c.epoch,his_lstm_c.history['loss'],'b--',label = 'Training losses')
plt.plot(his_lstm_c.epoch,his_lstm_c.history['val_loss'],'r',label = 'Validation losses')
plt.title(' Training and Validation Losses VS Epoch')
plt.legend()

plt.xlabel('Epochs')
plt.ylabel('Losses')